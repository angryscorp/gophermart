// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	model "github.com/angryscorp/gophermart/internal/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// TokenValidatorMock is an autogenerated mock type for the TokenValidator type
type TokenValidatorMock struct {
	mock.Mock
}

type TokenValidatorMock_Expecter struct {
	mock *mock.Mock
}

func (_m *TokenValidatorMock) EXPECT() *TokenValidatorMock_Expecter {
	return &TokenValidatorMock_Expecter{mock: &_m.Mock}
}

// Validate provides a mock function with given fields: tokenString
func (_m *TokenValidatorMock) Validate(tokenString string) (*model.Token, error) {
	ret := _m.Called(tokenString)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 *model.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*model.Token, error)); ok {
		return rf(tokenString)
	}
	if rf, ok := ret.Get(0).(func(string) *model.Token); ok {
		r0 = rf(tokenString)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Token)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(tokenString)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TokenValidatorMock_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type TokenValidatorMock_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - tokenString string
func (_e *TokenValidatorMock_Expecter) Validate(tokenString interface{}) *TokenValidatorMock_Validate_Call {
	return &TokenValidatorMock_Validate_Call{Call: _e.mock.On("Validate", tokenString)}
}

func (_c *TokenValidatorMock_Validate_Call) Run(run func(tokenString string)) *TokenValidatorMock_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *TokenValidatorMock_Validate_Call) Return(_a0 *model.Token, _a1 error) *TokenValidatorMock_Validate_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *TokenValidatorMock_Validate_Call) RunAndReturn(run func(string) (*model.Token, error)) *TokenValidatorMock_Validate_Call {
	_c.Call.Return(run)
	return _c
}

// NewTokenValidatorMock creates a new instance of TokenValidatorMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTokenValidatorMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *TokenValidatorMock {
	mock := &TokenValidatorMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
